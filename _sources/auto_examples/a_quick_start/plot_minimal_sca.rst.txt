
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/a_quick_start/plot_minimal_sca.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_a_quick_start_plot_minimal_sca.py>`
        to download the full example code. or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_a_quick_start_plot_minimal_sca.py:


======================
A minimal SCA analysis
======================

This example provides a minimal code for identifying sectors -- more precisely,
XCoRs :cite:p:`jullien_cocoatree_2025` -- associated with a MSA.

.. GENERATED FROM PYTHON SOURCE LINES 9-14

.. code-block:: Python


    import cocoatree.datasets as c_data
    import cocoatree
    import matplotlib.pyplot as plt








.. GENERATED FROM PYTHON SOURCE LINES 15-21

Load the dataset
----------------

We start by importing the dataset. In this case, we can directly load the S1
serine protease dataset provided in :mod:`cocoatree`. To work on your on
dataset, you can use the :func:`cocoatree.io.load_msa` function.

.. GENERATED FROM PYTHON SOURCE LINES 21-28

.. code-block:: Python


    serine_dataset = c_data.load_S1A_serine_proteases()
    loaded_seqs = serine_dataset["alignment"]
    loaded_seqs_id = serine_dataset["sequence_ids"]
    n_loaded_pos, n_loaded_seqs = len(loaded_seqs[0]), len(loaded_seqs)









.. GENERATED FROM PYTHON SOURCE LINES 29-32

Compute the SCA analysis
------------------------


.. GENERATED FROM PYTHON SOURCE LINES 32-37

.. code-block:: Python


    coevol_matrix, results = cocoatree.perform_sca(
        loaded_seqs_id, loaded_seqs, n_components=3)
    print(results.head())





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

       original_msa_pos  filtered_msa_pos  PC1  IC1  ...  sector_2  PC3  IC3  sector_3
    0                 0               NaN  NaN  NaN  ...     False  NaN  NaN     False
    1                 1               NaN  NaN  NaN  ...     False  NaN  NaN     False
    2                 2               NaN  NaN  NaN  ...     False  NaN  NaN     False
    3                 3               NaN  NaN  NaN  ...     False  NaN  NaN     False
    4                 4               NaN  NaN  NaN  ...     False  NaN  NaN     False

    [5 rows x 11 columns]




.. GENERATED FROM PYTHON SOURCE LINES 38-39

Extracting the list of residues (i.e. positions) composing the XCoRs.

.. GENERATED FROM PYTHON SOURCE LINES 39-44

.. code-block:: Python


    print('XCoR_1:', [])
    print('XCoR_2:', [])
    print('XCoR_3:', [])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    XCoR_1: []
    XCoR_2: []
    XCoR_3: []




.. GENERATED FROM PYTHON SOURCE LINES 45-47

Visualizing XCoRs on independent components
-------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 47-64

.. code-block:: Python


    # Plotting independent components
    fig, ax = plt.subplots()
    ax.plot(results.loc[:, "IC1"],
            results.loc[:, "IC2"],
            ".", c="black")

    # Plotting XCoRs elements
    for isec, color in zip([1, 2, 3], ['r', 'g', 'b']):
        ax.plot(results.loc[results["sector_%d" % isec], "IC1"],
                results.loc[results["sector_%d" % isec], "IC2"],
                ".", c=color, label="XCoR_%d" % isec)

    ax.set_xlabel("IC1")
    ax.set_ylabel("IC2")

    ax.legend()



.. image-sg:: /auto_examples/a_quick_start/images/sphx_glr_plot_minimal_sca_001.png
   :alt: plot minimal sca
   :srcset: /auto_examples/a_quick_start/images/sphx_glr_plot_minimal_sca_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fa2219eac90>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 2.414 seconds)


.. _sphx_glr_download_auto_examples_a_quick_start_plot_minimal_sca.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/tree-timc/cocoatree/gh-pages?urlpath=lab/tree/notebooks/auto_examples/a_quick_start/plot_minimal_sca.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_minimal_sca.ipynb <plot_minimal_sca.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_minimal_sca.py <plot_minimal_sca.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_minimal_sca.zip <plot_minimal_sca.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
