
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/d_datasets/plot_DHFR.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_d_datasets_plot_DHFR.py>`
        to download the full example code. or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_d_datasets_plot_DHFR.py:


DHFR proteases
====================

This example shows how the DHFR dataset is organized and how you can use it to
test cocoatree's features.

.. GENERATED FROM PYTHON SOURCE LINES 9-16

.. code-block:: Python


    import numpy as np

    from cocoatree.datasets import load_DHFR
    import cocoatree.msa as c_msa
    import cocoatree.statistics.position as c_pos








.. GENERATED FROM PYTHON SOURCE LINES 17-19

Load the dataset
^^^^^^^^^^^^^^^^

.. GENERATED FROM PYTHON SOURCE LINES 19-22

.. code-block:: Python

    dataset = load_DHFR()
    print(dataset.keys())





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    dict_keys(['sequence_ids', 'alignment', 'sector_positions', 'pdb_sequence', 'pdb_positions'])




.. GENERATED FROM PYTHON SOURCE LINES 23-34

`dataset` is a dictionary with 5 elements:
  - `sequence_ids`: a list of the sequence identifiers for the MSA
  - `alignment`: the aligned sequences
  - `sector_positions`: a Numpy NpzFile of the sectors' positions as found in
the Kalmer study
  - `pdb_sequence`: a tuple of the pdb sequence of 3QL3 (wild-type E. coli
DHFR)
  - `pdb_positions`: a list of the named positions found in the PDB

Access the sequence data
^^^^^^^^^^^^^^^^^^^^^^^^

.. GENERATED FROM PYTHON SOURCE LINES 34-41

.. code-block:: Python

    loaded_seqs = dataset["alignment"]
    loaded_seqs_id = dataset["sequence_ids"]
    n_loaded_pos, n_loaded_seqs = len(loaded_seqs[0]), len(loaded_seqs)

    print(f"The loaded MSA has {n_loaded_seqs} sequences and {n_loaded_pos} \
          positions.")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    The loaded MSA has 4422 sequences and 802       positions.




.. GENERATED FROM PYTHON SOURCE LINES 42-44

Example of sequence filtering
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. GENERATED FROM PYTHON SOURCE LINES 44-54

.. code-block:: Python

    sequences, sequences_id, positions = c_msa.filter_sequences(
        loaded_seqs, loaded_seqs_id, gap_threshold=0.4, seq_threshold=0.2)
    n_pos = len(positions)
    print(f"After filtering, we have {n_pos} remaining positions.")
    print(f"After filtering, we have {len(sequences)} remaining sequences.")

    seq_weights, m_eff = c_pos.compute_seq_weights(sequences)
    print('Number of effective sequences %d' %
          np.round(m_eff))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    After filtering, we have 156 remaining positions.
    After filtering, we have 3806 remaining sequences.
    Number of effective sequences 3332




.. GENERATED FROM PYTHON SOURCE LINES 55-57

Access sector information
^^^^^^^^^^^^^^^^^^^^^^^^^

.. GENERATED FROM PYTHON SOURCE LINES 57-63

.. code-block:: Python

    sectors = dataset["sector_positions"]
    print("There are", len(sectors), "sectors")

    for sect in sectors:
        print(sect, "is composed of:", len(sectors[sect]), "positions.")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    There are 4 sectors
    arr_0 is composed of: 12 positions.
    arr_1 is composed of: 19 positions.
    arr_2 is composed of: 7 positions.
    arr_3 is composed of: 11 positions.




.. GENERATED FROM PYTHON SOURCE LINES 64-66

Access PDB information
^^^^^^^^^^^^^^^^^^^^^^

.. GENERATED FROM PYTHON SOURCE LINES 66-72

.. code-block:: Python

    pdb_seq = dataset["pdb_sequence"]
    pdb_pos = dataset["pdb_positions"]
    print("Start of E. coli DHFR's sequence:\n", pdb_seq[:10])
    print("Named positions of the first ten residues in E. coli's sequence:\n",
          pdb_pos[:10])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Start of E. coli DHFR's sequence:
     ('MISLIAALAVDRVIGMENAMPWPPLPADLAWFKRNTLNKPVIMGRHTWESIGRPLPGRKNIILSSQPGTDDRVTWVKSVDEAIAACGDVPEIMVIGGGRVYEQFLPKAQKLYLTHIDAEVEGDTHFPDYEPDDWESVFSEFHDADAQNAHSYCFEILERR',)
    Named positions of the first ten residues in E. coli's sequence:
     ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']




.. GENERATED FROM PYTHON SOURCE LINES 73-80

References
----------

.. [1] `Statistical Coupling Analysis Predicts Correlated Motions in
       Dihydrofolate Reductase
       <https://pubs.acs.org/doi/10.1021/acs.jpcb.4c04195>`_,
       Kalmer et al., J. Phys. Chem. 2024


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 2.980 seconds)


.. _sphx_glr_download_auto_examples_d_datasets_plot_DHFR.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/tree-timc/cocoatree/gh-pages?urlpath=lab/tree/notebooks/auto_examples/d_datasets/plot_DHFR.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_DHFR.ipynb <plot_DHFR.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_DHFR.py <plot_DHFR.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_DHFR.zip <plot_DHFR.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
